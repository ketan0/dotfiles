{;;beginning bracket for whole data structure!

 :profiles {
            :Ketan {
                    :default true
                    :sim     60    ;; simultaneous_threshold_milliseconds (def: 50)
                    ;; keys need to be pressed within this threshold to be considered simultaneous
                    :delay   80    ;; to_delayed_action_delay_milliseconds (def: 500)
                    ;; basically it means time after which the key press is count delayed
                    :alone   400      ;; to_if_alone_timeout_milliseconds (def: 1000)
                    ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
                    :held    50   ;; to_if_held_down_threshold_milliseconds (def: 500)
                    ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
                    }
            } ;; profiles

    :templates {
                :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
                :open "open \"%s\""
                } ;; templates

    :layers {

    :tab-mode {:key :tab
               :afterup [{:set ["yabai-move-mode" 0]}
                         {:set ["yabai-focus-mode" 0]}
                         {:set ["yabai-display-mode" 0]}
                         {:set ["chrome-movement-mode" 0]}
                         {:set ["chrome-rearrange-tab-mode" 0]}]}

    :yabai-move-mode {:key :w :condi :tab-mode}
    :yabai-focus-mode {:key :f :condi :tab-mode}
    :yabai-display-mode {:key :d :condi :tab-mode}
    :chrome-movement-mode {:key :t :condi :tab-mode} ;;TODO make this work
    :chrome-history-mode {:key :g :condi :tab-mode} ;;TODO make this work
    :chrome-rearrange-tab-mode {:key :r :condi :tab-mode}
    :vim-mode {:key :z}
    }

    :simlayers {
    :slash-mode {:key :slash}
    :jupyter-mode {:key :j}
    }

   :main [{
   :des "see karabiner.org for documentation.",
   :rules [

   [:##right_command :right_command nil {:alone :!Ctab}]

    [:##caps_lock :left_control nil {:alone :escape}]

   ;; :yabai-insert-mode
   ;; [:h "/usr/local/bin/yabai -m window --insert west"]
   ;; [:j "/usr/local/bin/yabai -m window --insert south"]
   ;; [:k "/usr/local/bin/yabai -m window --insert north"]
   ;; [:l "/usr/local/bin/yabai -m window --insert east"]

   ;; move windows
   :yabai-move-mode
   [:h "/usr/local/bin/yabai -m window --warp west"]
   [:j "/usr/local/bin/yabai -m window --warp south"]
   [:k "/usr/local/bin/yabai -m window --warp north"]
   [:l "/usr/local/bin/yabai -m window --warp east"]
   [:b "/usr/local/bin/yabai -m space --balance"]
   [:a "/usr/local/bin/yabai -m window --toggle float"]
   [:s "/usr/local/bin/yabai -m window --toggle split"]

   ;; ;; ;; scale windows
   ;; :yabai-scale-mode
   ;; [:h "/usr/local/bin/yabai -m window --resize left"]
   ;; [:j "/usr/local/bin/yabai -m window --resize down"]
   ;; [:k "/usr/local/bin/yabai -m window --resize up"]
   ;; [:l "/usr/local/bin/yabai -m window --resize right"]

   ;; directionally navigate windows/spaces
   ;; space<=="g", {"h" "j" "k" "l"}, ";"==>space
   :yabai-focus-mode
   [:g "/usr/local/bin/yabai -m space --focus prev"]
   [:h "/usr/local/bin/yabai -m window --focus west"]
   [:j "/usr/local/bin/yabai -m window --focus south"]
   [:k "/usr/local/bin/yabai -m window --focus north"]
   [:l "/usr/local/bin/yabai -m window --focus east"]
   [:semicolon "/usr/local/bin/yabai -m space --focus next"]

   :yabai-display-mode
   [:h "/usr/local/bin/yabai -m display --focus prev"]
   [:j "/usr/local/bin/yabai -m window --display prev && /usr/local/bin/yabai -m display --focus prev"]
   [:k "/usr/local/bin/yabai -m window --display next && /usr/local/bin/yabai -m display --focus next"]
   [:l "/usr/local/bin/yabai -m display --focus next"]

   :chrome-history-mode
   [:h :!Copen_bracket]
   [:l :!Cclose_bracket]

   :chrome-movement-mode
   [:h :!TStab]
   [:l :!Ttab]

   ;;NOTE: need the Chrome extension for this to work
   :chrome-rearrange-tab-mode
   ;; [:h :!COdown_arrow]

   [:h :!TSleft_arrow]
   [:l :!TSright_arrow]
   ;; [:l :!COup_arrow]

   :tab-mode
   [:spacebar :!CTspacebar]
   ;; [:q [:km "Open Qutebrowser"]]
   ;; [:x [:km "Open Xcode"]]
   ;; [:w [:km "Open Word"]]
   ;; [:y [:km "Open Keyboard Maestro"]]

:slash-mode
[:s [:km "Open Spotify"]]
[:c [:km "Open Chrome"]]
[:k [:km "Open Keyboard Maestro"]]
[:e [:km "Open Emacs"]]
[:i [:km "Open iTerm"]]
[:m [:km "Open Messages"]]
[:n [:km "Open Notes"]]
[:v [:km "Open Zoom"]]

:vim-mode
[:#Sh :left_arrow] ;; hjkl navigation everywhere + Shift
[:#Sj :down_arrow]
[:#Sk :up_arrow]
[:#Sl :right_arrow]
[:#Sb :!Oleft_arrow]
[:#Sw :!Oright_arrow]
[:delete_or_backspace :!Odelete_or_backspace]

     :jupyter-mode
     [:l [:km "Start or Go to Existing Jupyter Lab Server"]]

    ]}] ;;end main

    :applications [

    :Emacs ["^org\\.gnu\\.Emacs$"]
    :Chrome ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]

    ]

    };;ending bracket for whole data structure!
