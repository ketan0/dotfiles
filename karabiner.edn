{;;beginning bracket for whole data structure -- don't delete!

 :profiles {
            :Ketan {
                    :default true
                    :sim     500    ;; simultaneous_threshold_milliseconds (def: 50)
                    ;; keys need to be pressed within this threshold to be considered simultaneous
                    :delay   80    ;; to_delayed_action_delay_milliseconds (def: 500)
                    ;; basically it means time after which the key press is count delayed
                    :alone   500      ;; to_if_alone_timeout_milliseconds (def: 1000)
                    ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
                    :held    1000   ;; to_if_held_down_threshold_milliseconds (def: 500)
                    ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
                    }
            } ;; profiles

:templates {
            :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\" with parameter \"%s\"'"
            :open "open \"%s\""
            :openhide "open \"%s\" -gj"
            :alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
            } ;; templates

:layers {

         :tab-mode {:key :tab
                    :afterup [{:set ["yabai-move-mode" 0]}
                              {:set ["yabai-focus-mode" 0]}
                              {:set ["yabai-display-mode" 0]}
                              {:set ["chrome-movement-mode" 0]}
                              {:set ["chrome-rearrange-tab-mode" 0]}]}

         :q-key-mode {:key :q}
         :yabai-move-mode {:key :w :condi :tab-mode}
         :yabai-focus-mode {:key :f :condi :tab-mode}
         :yabai-display-mode {:key :d :condi :tab-mode}
         :chrome-movement-mode {:key :t :condi :tab-mode} ;;TODO make this work
         :chrome-history-mode {:key :g :condi :tab-mode} ;;TODO make this work
         :chrome-rearrange-tab-mode {:key :r :condi :tab-mode}
         :vim-mode {:key :z}
         :tilde-mode {:key :grave_accent_and_tilde}
}

:simlayers {
        :slash-mode {:key :slash}
        :jupyter-mode {:key :j}
        :o-key-mode {:key :o}
        :comma-mode {:key :comma}
}

:main [{
        :des "see karabiner.org for documentation.",
        :rules [

[:right_command :right_command nil {:alone [:km "Previous Application" "hide"]}]
[:right_option :right_option nil {:alone [:km "Previous Application"]}]

[:##caps_lock :left_control nil {:alone :escape}]

:yabai-move-mode
[:h "/usr/local/bin/yabai -m window --warp west"]
[:j "/usr/local/bin/yabai -m window --warp south"]
[:k "/usr/local/bin/yabai -m window --warp north"]
[:l "/usr/local/bin/yabai -m window --warp east"]
[:b "/usr/local/bin/yabai -m space --balance"]
[:s "/usr/local/bin/yabai -m window --toggle split"]

:yabai-focus-mode
[:g "/usr/local/bin/yabai -m space --focus prev"]
[:h "/usr/local/bin/yabai -m window --focus west"]
[:j "/usr/local/bin/yabai -m window --focus south"]
[:k "/usr/local/bin/yabai -m window --focus north"]
[:l "/usr/local/bin/yabai -m window --focus east"]
[:semicolon "/usr/local/bin/yabai -m space --focus next"]

:yabai-display-mode
[:h "/usr/local/bin/yabai -m display --focus prev"]
[:j "/usr/local/bin/yabai -m window --display prev && /usr/local/bin/yabai -m display --focus prev"]
[:k "/usr/local/bin/yabai -m window --display next && /usr/local/bin/yabai -m display --focus next"]
[:l "/usr/local/bin/yabai -m display --focus next"]

:chrome-history-mode
[:h :!Copen_bracket]
[:l :!Cclose_bracket]

:chrome-movement-mode
[:h :!TStab]
[:l :!Ttab]

:chrome-rearrange-tab-mode
[:h :!TSleft_arrow]
[:l :!TSright_arrow]

:tab-mode
[:spacebar :!CTspacebar] ;; open emoji picker
[:return_or_enter  "/usr/local/bin/yabai -m window --toggle float"]
[:3 [:km "Toggle Dark Mode"]]
[:s [:km "Open Spotify" "hide"]]
[:c [:km "Open Chrome" "hide"]]
[:k [:km "Open Keyboard Maestro" "hide"]]
[:e [:km "Open Emacs" "hide"]]
[:i [:km "Open iTerm" "hide"]]
[:m [:km "Open Messages" "hide"]]
[:comma [:km "Open Messenger" "hide"]]
[:n [:km "Open Notes" "hide"]]
[:v [:km "Open Zoom" "hide"]]
;; [:q [:km "Open Qutebrowser"]]
;; [:x [:km "Open Xcode"]]
;; [:w [:km "Open Word"]]

:q-key-mode
[:s [:km "Open Spotify"]]
[:c [:km "Open Chrome"]]
[:k [:km "Open Keyboard Maestro"]]
[:e [:km "Open Emacs"]]
[:i [:km "Open iTerm"]]
[:m [:km "Open Messages"]]
[:comma [:km "Open Messenger"]]
[:n [:km "Open Notes"]]
[:v [:km "Open Zoom"]]

:tilde-mode
[:f [:openhide "focus://focus?minutes=30"]]
[:t [:openhide "focus://toggle"]]
[:u [:openhide "focus://unfocus"]]
[:comma [:open "focus://preferences"]]

:comma-mode
[:i [:open "https://www.keyhero.com/typing-instant-death/"]]
[:t [:open "https://www.keyhero.com/free-typing-test/"]]

:o-key-mode
[:r [:km "org-roam capture"]]

:vim-mode
[:#Sh :left_arrow] ;; hjkl navigation everywhere + Shift
[:#Sj :down_arrow]
[:#Sk :up_arrow]
[:#Sl :right_arrow]
[:#Sb :!Oleft_arrow]
[:#Sw :!Oright_arrow]
[:delete_or_backspace :!Odelete_or_backspace]

:jupyter-mode
[:l [:km "Start or Go to Existing Jupyter Lab Server"]]
[:t [:km "org-roam capture"]]

]}] ;;end main

:applications [

               :Emacs ["^org\\.gnu\\.Emacs$"]
               :Chrome ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]

               ]

} ;;ending bracket for whole data structure -- don't delete!
